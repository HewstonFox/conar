/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthImport } from './routes/_auth'
import { Route as ProtectedIndexImport } from './routes/_protected/index'
import { Route as ProtectedDashboardImport } from './routes/_protected/dashboard'
import { Route as ProtectedAboutImport } from './routes/_protected/about'
import { Route as AuthSignInIndexImport } from './routes/_auth/sign-in/index'
import { Route as AuthSignInEmailImport } from './routes/_auth/sign-in/email'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedDashboardRoute = ProtectedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedAboutRoute = ProtectedAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSignInEmailRoute = AuthSignInEmailImport.update({
  id: '/sign-in/email',
  path: '/sign-in/email',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_protected/about': {
      id: '/_protected/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof ProtectedAboutImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_auth/sign-in/email': {
      id: '/_auth/sign-in/email'
      path: '/sign-in/email'
      fullPath: '/sign-in/email'
      preLoaderRoute: typeof AuthSignInEmailImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-in/': {
      id: '/_auth/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthSignInEmailRoute: typeof AuthSignInEmailRoute
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInEmailRoute: AuthSignInEmailRoute,
  AuthSignInIndexRoute: AuthSignInIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedRouteChildren {
  ProtectedAboutRoute: typeof ProtectedAboutRoute
  ProtectedDashboardRoute: typeof ProtectedDashboardRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAboutRoute: ProtectedAboutRoute,
  ProtectedDashboardRoute: ProtectedDashboardRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteWithChildren
  '/about': typeof ProtectedAboutRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/': typeof ProtectedIndexRoute
  '/sign-in/email': typeof AuthSignInEmailRoute
  '/sign-in': typeof AuthSignInIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/about': typeof ProtectedAboutRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/': typeof ProtectedIndexRoute
  '/sign-in/email': typeof AuthSignInEmailRoute
  '/sign-in': typeof AuthSignInIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/about': typeof ProtectedAboutRoute
  '/_protected/dashboard': typeof ProtectedDashboardRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_auth/sign-in/email': typeof AuthSignInEmailRoute
  '/_auth/sign-in/': typeof AuthSignInIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/about' | '/dashboard' | '/' | '/sign-in/email' | '/sign-in'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/about' | '/dashboard' | '/' | '/sign-in/email' | '/sign-in'
  id:
    | '__root__'
    | '/_auth'
    | '/_protected'
    | '/_protected/about'
    | '/_protected/dashboard'
    | '/_protected/'
    | '/_auth/sign-in/email'
    | '/_auth/sign-in/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_protected"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/sign-in/email",
        "/_auth/sign-in/"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/about",
        "/_protected/dashboard",
        "/_protected/"
      ]
    },
    "/_protected/about": {
      "filePath": "_protected/about.tsx",
      "parent": "/_protected"
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard.tsx",
      "parent": "/_protected"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    },
    "/_auth/sign-in/email": {
      "filePath": "_auth/sign-in/email.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-in/": {
      "filePath": "_auth/sign-in/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
